# Generated by Django 5.2.6 on 2025-10-02 17:11

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('challenges', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChallengeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('food', 'Food & Diet'), ('transport', 'Transportation'), ('waste', 'Waste Reduction'), ('energy', 'Energy Consumption'), ('shopping', 'Sustainable Shopping'), ('lifestyle', 'Lifestyle')], max_length=20)),
                ('duration_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('ongoing', 'Ongoing')], max_length=20)),
                ('duration_days', models.IntegerField(help_text='Duration in days (0 for ongoing)')),
                ('carbon_impact', models.DecimalField(decimal_places=2, help_text='Estimated CO2 savings in kg', max_digits=8)),
                ('difficulty_level', models.IntegerField(choices=[(1, 'Easy'), (2, 'Medium'), (3, 'Hard')])),
                ('icon_color', models.CharField(default='green', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['category', 'difficulty_level'],
            },
        ),
        migrations.CreateModel(
            name='UserChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('failed', 'Failed'), ('paused', 'Paused')], default='active', max_length=20)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('challenge_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.challengetype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'challenge_type')},
            },
        ),
        migrations.CreateModel(
            name='ChallengeProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('completed', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('carbon_saved', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user_challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_entries', to='challenges.userchallenge')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('user_challenge', 'date')},
            },
        ),
        migrations.DeleteModel(
            name='Challenge',
        ),
    ]
